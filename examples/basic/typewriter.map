{"version":3,"sources":["../node_modules/typeit/dist/typeit.min.js","typewriter.js"],"names":["template","document","createElement","innerHTML","defaultTypeOptions","cursor","speed","waitUntilVisible","VFFTypewriter","typed","_shadowRoot","attachShadow","mode","appendChild","content","cloneNode","window","vff","ready","vffReady","HTMLElement","p","querySelector","_text","getAttribute","text","innerText","setTimeout","options","Object","assign","strings","split","TypeIt","go","clearText","MODE","PREVIEW","setText","typeText","value","render","setAttribute","define"],"mappings":"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","file":"typewriter.map","sourceRoot":"../src","sourcesContent":["/*!\n * \n *   typeit - The most versatile animated typing utility on the planet.\n *   Author: Alex MacArthur <alex@macarthur.me> (https://macarthur.me)\n *   Version: v6.0.2\n *   URL: https://typeitjs.com\n *   License: GPL-2.0\n * \n */\n!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.TypeIt=e():t.TypeIt=e()}(window,function(){return function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var r in t)n.d(i,r,function(e){return t[e]}.bind(null,r));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"\",n(n.s=0)}([function(t,e,n){\"use strict\";n.r(e);var i={strings:[],speed:100,cursor:!0,cursorChar:\"|\",cursorSpeed:1e3,deleteSpeed:null,lifeLike:!0,breakLines:!0,startDelay:250,startDelete:!1,nextStringDelay:750,loop:!1,loopDelay:null,html:!0,waitUntilVisible:!1,beforeString:!1,afterString:!1,beforeStep:!1,afterStep:!1,afterComplete:!1};function r(t){var e=t.getBoundingClientRect();return!(e.right>window.innerWidth||e.bottom>window.innerHeight)&&!(e.top<0||e.left<0)}function o(t,e){return Math.abs(Math.random()*(t+e-(t-e))+(t-e))}function s(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",n=document.createElement(\"style\");n.id=e,n.appendChild(document.createTextNode(t)),document.head.appendChild(n)}var a=function(t,e){for(var n=Object(t),i=1;i<arguments.length;i++){var r=arguments[i];if(null!=r)for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(n[o]=r[o])}return n},u=function(t){return[\"textarea\",\"input\"].indexOf(t.tagName.toLowerCase())>-1},l=function(t){return Array.isArray(t)?t.slice(0):t.split(\"<br>\")};function c(t){return t.replace(/&(.+);/,function(t){var e=document.createElement(\"textarea\");return e.innerHTML=t,e.value})}function f(t){return(f=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}var h=\"{%}\";var p=function(t){var e=function(t){var e=(new DOMParser).parseFromString(t,\"text/html\"),n=[].slice.call(e.body.querySelectorAll(\"*\"));return(n=n.filter(function(e){return!(e.outerHTML.indexOf(\"></\")>-1&&(t=t.replace(e.outerHTML,\"\"),1))})).forEach(function(e){t=t.replace(new RegExp(\"<\".concat(e.tagName,\"(.*?)/?>((.*?)</\").concat(e.tagName,\">)?\"),\"i\"),h)}),{string:t,nodes:n}}(t),n=e.string,i=e.nodes,r=c(n).split(\"\"),o=[];return r.forEach(function(t,e){if(r.slice(e,e+3).join(\"\")===h){var n=e,s=i.shift(),a=c(s.innerHTML).split(\"\"),u=[].slice.call(s.attributes).map(function(t){return{name:t.name,value:t.nodeValue}});a.length?a.forEach(function(t,i){o.push({tag:s.tagName,attributes:u,content:t,isFirstCharacter:n===e,isLastCharacter:i+1===a.length}),n++}):o.push({tag:s.tagName,attributes:u,content:null})}else o.push(t)}),o=function(t){for(var e=!0;e;)t.some(function(e,n){return!(\"object\"!==f(e)||!e.isLastCharacter&&null!==e.content||\"%}\"!==t.slice(n+1,n+3).join(\"\")||(t.splice(n+1,2),0))})||(e=!1);return t}(o)},d=function(t){var e=t.tag,n=t.attributes,i=void 0===n?[]:n,r=t.content,o=void 0===r?\"\":r,s=document.createElement(e);return void 0!==i&&i.forEach(function(t){s.setAttribute(t.name,t.value)}),o&&(s.innerHTML=o),s.outerHTML},y=function(t){arguments.length>1&&void 0!==arguments[1]&&arguments[1]?t.value=\"\":[].slice.call(t.childNodes).forEach(function(e){void 0!==e.classList&&e.classList.contains(\"ti-wrapper\")&&(t.innerHTML=\"\")})};function v(t){return(v=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}function g(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||\"[object Arguments]\"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}()}function m(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}var b=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.executed=[],this.waiting=e,!e.length&&n&&this.add(n)}var e,n,i;return e=t,(n=[{key:\"add\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this.waiting[e?\"unshift\":\"push\"](t),this}},{key:\"delete\",value:function(t){return this.waiting.splice(t,1),this}},{key:\"reset\",value:function(){return this.waiting=g(this.executed).concat(g(this.waiting)),this.executed=[],this}}])&&m(e.prototype,n),i&&m(e,i),t}();function w(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||\"[object Arguments]\"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}()}function S(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}var k=\"display:inline;position:relative;font:inherit;color:inherit;line-height:inherit;\",q=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e.element,r=e.id,o=e.options,s=e.queue,c=void 0===s?[]:s;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.status={started:!1,complete:!1,frozen:!1,destroyed:!1},this.timeouts=[],this.id=r,this.$e=n,this.isInput=u(n),this.opts=a({},i,o),this.opts.strings=l(this.opts.strings),this.opts.html=!this.isInput&&this.opts.html,this.queue=new b(c,[this.pause,this.opts.startDelay]),y(n,this.isInput),this.prepareDelay(\"nextStringDelay\"),this.prepareDelay(\"loopDelay\");var f=this.$e.innerHTML;this.prepDOM(),this.handleHardCoded(f),this.opts.strings=this.opts.strings.map(function(t){return t.replace(/<\\!--.*?-->/g,\"\")}),!this.opts.strings.length||this.queue.waiting.length>1||this.generateQueue()}var e,n,c;return e=t,(n=[{key:\"reset\",value:function(){return this.queue.reset(),new t({element:this.$e,id:this.id,options:this.opts,queue:this.queue.waiting})}},{key:\"init\",value:function(){var t=this;if(!this.status.started){if(this.cursor(),!this.opts.waitUntilVisible||r(this.$e))return this.status.started=!0,this.fire();window.addEventListener(\"scroll\",function e(){r(t.$e)&&!t.status.started&&(t.fire(),window.removeEventListener(\"scroll\",e))})}}},{key:\"fire\",value:function(){for(var t=this,e=this.queue.waiting.slice(),n=Promise.resolve(),i=function(i){var r=e[i],o=[r,t.queue,t];n=n.then(function(){return new Promise(function(e,n){if(t.status.frozen)return n();var i,s;(t.setPace(),r[2]&&r[2].isFirst&&t.opts.beforeString)&&(i=t.opts).beforeString.apply(i,o);t.opts.beforeStep&&(s=t.opts).beforeStep.apply(s,o);r[0].call(t,r[1],r[2]).then(function(){var n,i,s=t.queue.waiting.shift();if(r[2]&&r[2].isPhantom)return e();r[2]&&r[2].isLast&&t.opts.afterString&&(n=t.opts).afterString.apply(n,o);t.opts.afterStep&&(i=t.opts).afterStep.apply(i,o);return t.queue.executed.push(s),e()})})})},r=0;r<e.length;r++)i(r);n.then(function(){if(t.opts.loop){var e=t.opts.loopDelay?t.opts.loopDelay:t.opts.nextStringDelay;t.wait(function(){t.loopify(e),t.fire()},e.after)}t.status.completed=!0,t.opts.afterComplete&&t.opts.afterComplete(t)}).catch(function(){})}},{key:\"loopify\",value:function(t){var e=this;this.queue.reset().delete(0).add([this.pause,t.before],!0),this.getNoderized().forEach(function(t){e.queue.add([e.delete,null,{isPhantom:!0}],!0)})}},{key:\"prepDOM\",value:function(){this.isInput||(this.$e.innerHTML='\\n      <span style=\"'.concat(k,'\" class=\"ti-wrapper\">\\n        <span style=\"').concat(k,'\" class=\"ti-container\"></span>\\n      </span>\\n      '),this.$e.setAttribute(\"data-typeit-id\",this.id),this.$eContainer=this.$e.querySelector(\".ti-container\"),this.$eWrapper=this.$e.querySelector(\".ti-wrapper\"),s(\"\\n        .\".concat(this.$eContainer.className,\":before {\\n          content: '.';\\n          display: inline-block;\\n          width: 0;\\n          visibility: hidden;\\n        }\\n      \")))}},{key:\"setContents\",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\";this.isInput?this.$e.value=t:this.$eContainer[this.opts.html?\"innerHTML\":\"innerText\"]=t}},{key:\"getRaw\",value:function(){return this.isInput?this.$e.value:this.opts.html?this.$eContainer.innerHTML:this.$eContainer.innerText}},{key:\"getNoderized\",value:function(){return this.maybeNoderize(this.getRaw())}},{key:\"prepareDelay\",value:function(t){var e=this.opts[t];if(e){var n=Array.isArray(e),i=n?null:e/2;this.opts[t]={before:n?e[0]:i,after:n?e[1]:i,total:n?e[0]+e[1]:e}}}},{key:\"generateQueue\",value:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;e&&this.queue.add(e),this.opts.strings.forEach(function(e,n){t.queueString(e);var i=t.queue.waiting.length;if(n+1!==t.opts.strings.length){if(t.opts.breakLines)return t.queue.add([t.type,\"<br>\"]),void t.addSplitPause(i);t.queueDeletions(e),t.addSplitPause(i,e.length)}})}},{key:\"queueDeletions\",value:function(){for(var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,e=\"string\"==typeof t?this.maybeNoderize(t).length:t,n=0;n<e;n++)this.queue.add([this.delete])}},{key:\"maybeNoderize\",value:function(t){return this.opts.html?p(t):t.split(\"\")}},{key:\"queueString\",value:function(t){var e=this,n=(t=this.maybeNoderize(t)).length;t.forEach(function(t,i){var r=[e.type,t];0===i&&r.push({isFirst:!0}),i+1===n&&r.push({isLast:!0}),e.queue.add(r)})}},{key:\"addSplitPause\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;this.queue.waiting.splice(t,0,[this.pause,this.opts.nextStringDelay.before]),this.queue.waiting.splice(t+e+1,0,[this.pause,this.opts.nextStringDelay.after])}},{key:\"cursor\",value:function(){if(!this.isInput){var t=\"display: none;\";this.opts.cursor&&(s(\"\\n        @keyframes blink-\".concat(this.id,\" {\\n          0% {opacity: 0}\\n          49% {opacity: 0}\\n          50% {opacity: 1}\\n        }\\n\\n        [data-typeit-id='\").concat(this.id,\"'] .ti-cursor {\\n          animation: blink-\").concat(this.id,\" \").concat(this.opts.cursorSpeed/1e3,\"s infinite;\\n        }\\n      \"),this.id),t=\"\"),this.$eWrapper.insertAdjacentHTML(\"beforeend\",'<span style=\"'.concat(k).concat(t,'left: -.25ch;\" class=\"ti-cursor\">').concat(this.opts.cursorChar,\"</span>\"))}}},{key:\"insert\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.isInput?this.$e.value=\"\".concat(this.$e.value).concat(t):((e?this.$eContainer.lastChild:this.$eContainer).insertAdjacentHTML(\"beforeend\",t),this.setContents(this.getRaw().split(\"\").join(\"\")))}},{key:\"handleHardCoded\",value:function(t){return!!t.length&&(this.opts.startDelete?(this.insert(t),this.queue.add([this.delete,!0]),void this.addSplitPause(1)):void(this.opts.strings=w(l(t.trim())).concat(w(this.opts.strings))))}},{key:\"wait\",value:function(t,e){this.timeouts.push(setTimeout(t,e))}},{key:\"setPace\",value:function(){var t=this.opts.speed,e=null!==this.opts.deleteSpeed?this.opts.deleteSpeed:this.opts.speed/3,n=t/2,i=e/2;this.typePace=this.opts.lifeLike?o(t,n):t,this.deletePace=this.opts.lifeLike?o(e,i):e}},{key:\"pause\",value:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return new Promise(function(n,i){t.wait(function(){return n()},e||t.opts.nextStringDelay.total)})}},{key:\"type\",value:function(t){var e=this;return new Promise(function(n,i){e.wait(function(){return\"string\"==typeof t?(e.insert(t),n()):t.isFirstCharacter||null===t.content?(e.insert(d({tag:t.tag,attributes:t.attributes,content:t.content})),n()):(e.insert(t.content,!0),n())},e.typePace)})}},{key:\"empty\",value:function(){var t=this;return new Promise(function(e){return t.setContents(\"\"),e()})}},{key:\"delete\",value:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return new Promise(function(n,i){t.wait(function(){var i=t.getNoderized();return i.splice(-1,1),i=function(t){return(t=t.map(function(e,n){if(\"object\"===v(e)&&(e.isFirstCharacter||null===e.content)){for(var i=n,r=[e.content],o=!1;!o;){var s=t[++i];void 0!==s&&r.push(s.content),(void 0===s||s.isLastCharacter)&&(o=!0)}return d({tag:e.tag,attributes:e.attributes,content:r.join(\"\")})}return e})).filter(function(t){return\"object\"!==v(t)})}(i),t.setContents(i.join(\"\")),e&&i.length>0?t.delete(!0).then(function(){return n()}):n()},t.deletePace)})}},{key:\"setOptions\",value:function(t){var e=this;return new Promise(function(n){return e.opts=a({},e.opts,t),n()})}}])&&S(e.prototype,n),c&&S(e,c),t}(),C=function(t){return\"string\"==typeof t?t=document.querySelectorAll(t):t instanceof NodeList||(t=[t]),[].slice.call(t)};function j(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}n.d(e,\"default\",function(){return x});var x=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.instances=C(e).map(function(t){return new q({element:t,id:Math.random().toString(36).substring(2,15),options:n,queue:[]})})}var e,n,i;return e=t,(n=[{key:\"each\",value:function(t){var e=this;this.instances.forEach(function(n){t.call(e,n)})}},{key:\"queueUp\",value:function(t){var e=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;this.each(function(r){for(var o=\"string\"!=typeof t,s=o?t:r[t],a=o?e:n,u=0;u<i;u++)r.queue.add([s,a])})}},{key:\"is\",value:function(t){return e=this.instances,n=t,i=!0,!!e.length&&e.filter(function(t){return t.status[n]===i}).length===e.length;var e,n,i}},{key:\"freeze\",value:function(){this.each(function(t){t.status.frozen=!0})}},{key:\"unfreeze\",value:function(){this.each(function(t){t.status.frozen&&(t.status.frozen=!1,t.fire())})}},{key:\"type\",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\";return this.each(function(e){return e.queueString(t)}),this}},{key:\"delete\",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return this.queueUp(\"delete\",null===t,null===t?1:t),this}},{key:\"pause\",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return this.queueUp(\"pause\",t),this}},{key:\"break\",value:function(){return this.queueUp(\"type\",\"<br>\"),this}},{key:\"options\",value:function(t){return this.queueUp(\"setOptions\",t),this}},{key:\"exec\",value:function(t){return this.queueUp(t),this}},{key:\"destroy\",value:function(){var t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this.each(function(e){e.timeouts.forEach(function(t){clearTimeout(t)}),e.timeouts=[];var n=e.isInput?null:e.$eWrapper.querySelector(\".ti-cursor\");t&&e.opts.cursor&&null!==n&&e.$eWrapper.removeChild(n),e.status.destroyed=!0})}},{key:\"empty\",value:function(){return this.queueUp(\"empty\"),this}},{key:\"reset\",value:function(){return this.destroy(),this.instances=this.instances.map(function(t){return t.reset()}),this}},{key:\"go\",value:function(){return this.each(function(t){t.init()}),this}}])&&j(e.prototype,n),i&&j(e,i),t}()}]).default});","import TypeIt from 'typeit';\n\nlet template = document.createElement('template');\ntemplate.innerHTML = `\n    <style>\n    \n        @keyframes blink {\n          0% {opacity: 0}\n          49% {opacity: 0}\n          50% {opacity: 1}\n        }\n\n        .ti-cursor {\n          animation: blink 1s infinite;\n        }\n        p {\n            display: flex;\n            margin: 0;\n            white-space: pre-wrap;\n        }\n        p span.ti-wrapper{\n            display: flex !important;\n        }\n        \n      \n    </style>\n    <p></p>\n`;\n\n\nconst defaultTypeOptions = {\n    cursor : false,\n    speed: 100,\n    waitUntilVisible: true,\n};\n\nexport default class VFFTypewriter extends HTMLElement {\n    constructor() {\n        super();\n        this.typed;\n        this._shadowRoot = this.attachShadow({mode: 'open'});\n        this._shadowRoot.appendChild(template.content.cloneNode(true));\n        window.vff.ready(() => {\n            this.vffReady = true;\n        });\n    }\n\n    connectedCallback() {\n        this.p = this._shadowRoot.querySelector('p');\n        this._text = this.getAttribute(\"text\");\n    }\n\n    disconnectedCallback() {\n\n    }\n\n    clearText(){\n        this.p.innerHTML = '';\n    }\n    setText(text){\n        this.p.innerText = text;\n    }\n    typeText(text){\n        if(this.typed){this.typed = null;}\n        setTimeout(() => {\n            let options = Object.assign({}, defaultTypeOptions, {\n                cursor  : this.cursor,\n                speed   : this.speed\n            });\n            options.strings = text.split('\\n');\n            this.typed = new TypeIt(this.p, options).go();}\n        ,1);\n    }\n    render(text){\n        this.clearText();\n        if(!this.vffReady){\n            this.setText(text);\n        } else {\n            if(window.vff.mode === window.vff.MODE.PREVIEW){\n                this.setText(text);\n            } else {\n                this.typeText(text);\n            }\n        }\n    }\n    get text() {\n        return this._text;\n    }\n    set text(value) {\n        if(value !== this._text) {\n            this._text = value;\n            this.render(value);\n        }\n    }\n\n    get cursor(){\n        return this.getAttribute(\"cursor\") === 'true';\n    }\n    set cursor(value){\n        return this.setAttribute(\"cursor\", value);\n    }\n    get speed(){\n        return +this.getAttribute(\"speed\") || 100;\n    }\n    set speed(value){\n        return this.setAttribute(\"speed\", value);\n    }\n\n    expose(){\n        return {\n            text : 'text',\n            speed : 'speed',\n            cursor : 'cursor',\n        };\n    }\n}\n\nwindow.vff.define(\"vff-typewriter\", VFFTypewriter);\n\n"]}